graph() {
  %0 : int = prim::Constant[value=1]()
  %1 : Device = prim::Constant[value="cpu"]()
  %2 : int = prim::Constant[value=0]()
  %3 : int = prim::Constant[value=6]()
  %4 : int = prim::Constant[value=2]()
  %5 : int = prim::Constant[value=3]()
  %6 : int[] = prim::ListConstruct(%4, %5)
  %a.1 : Tensor = aten::rand(%6, %3, %2, %1)
  %8 : int[] = prim::ListConstruct(%4, %5)
  %9 : Tensor = aten::rand(%8, %3, %2, %1)
  %a.2 : Tensor = aten::add_(%a.1, %9, %0)
  %11 : int[] = prim::ListConstruct(%4, %5)
  %b.1 : Tensor = aten::rand(%11, %3, %2, %1)
  %13 : int[] = prim::ListConstruct(%4, %5)
  %14 : Tensor = aten::zeros(%13, %3, %2, %1)
  %15 : Tensor = aten::gt(%a.2, %14)
  %16 : bool = prim::TensorToBool(%15)
  %b : Tensor = prim::If(%16)
    block0() {
      %18 : int[] = prim::ListConstruct(%4, %5)
      %19 : Tensor = aten::rand(%18, %3, %2, %1)
      %b.2 : Tensor = aten::add_(%b.1, %19, %0)
      -> (%b.2)
    }
    block1() {
      -> (%b.1)
    }
  return (%b);
}
