graph(%x.1 : Tensor) {
  %1 : int = prim::Constant[value=5]()
  %2 : int = prim::Constant[value=6]()
  %3 : int = prim::Constant[value=4]()
  %4 : int = prim::Constant[value=3]()
  %5 : int = prim::Constant[value=2]()
  %6 : int = prim::Constant[value=1]()
  %x.3 : Tensor = ^not_a_script_fn()(%x.1)
  %8 : Tensor = aten::norm(%x.3, %5)
  %9 : Tensor = aten::gt(%8, %5)
  %10 : bool = prim::TensorToBool(%9)
  %x.4 : Tensor = prim::If(%10)
    block0() {
      %x.2 : Tensor = aten::add(%x.3, %4, %6)
      -> (%x.2)
    }
    block1() {
      -> (%x.3)
    }
  %13 : Tensor = aten::add(%x.4, %3, %6)
  %14 : Tensor = ^not_a_script_fn()(%x.4)
  %15 : Tensor = aten::add(%14, %x.4, %6)
  %16 : Tensor = aten::add(%x.4, %6, %6)
  %17 : Tensor = aten::add(%15, %16, %6)
  %x : Tensor = aten::add(%13, %17, %6)
  %19 : Tensor = aten::add(%x, %1, %6)
  %20 : Tensor = aten::add(%x, %2, %6)
  %21 : Tensor = ^not_a_script_fn()(%x)
  %22 : Tensor = aten::add(%20, %21, %6)
  %23 : Tensor = aten::add(%19, %22, %6)
  %24 : Tensor = aten::add(%x, %2, %6)
  %25 : Tensor = ^not_a_script_fn()(%x)
  %26 : Tensor = aten::add(%24, %25, %6)
  %27 : Tensor = aten::add(%23, %26, %6)
  return (%27);
}
